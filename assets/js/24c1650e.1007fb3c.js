"use strict";(self.webpackChunk_electron_wm_docs=self.webpackChunk_electron_wm_docs||[]).push([[122],{7269:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});var o=t(5250),i=t(3274);const r={sidebar_position:3},c="Running",a={id:"setup/running",title:"Running",description:"After installation and configuration, you can run the window manager and try it",source:"@site/docs/setup/running.md",sourceDirName:"setup",slug:"/setup/running",permalink:"/electron-wm/setup/running",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/electron-wm/setup/configuration"}},s={},d=[{value:"Transparency",id:"transparency",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"running",children:"Running"}),"\n",(0,o.jsx)(n.p,{children:"After installation and configuration, you can run the window manager and try it\nout."}),"\n",(0,o.jsxs)(n.p,{children:["As with other X11 window managers, you probably want to edit your ",(0,o.jsx)(n.code,{children:".xinitrc"}),"\nfile and add ",(0,o.jsx)(n.code,{children:"electron-wm"})," to the end, making it the last executable invoked\nwhen starting your X server."]}),"\n",(0,o.jsxs)(n.p,{children:["If your configuration package is in a non-default location, specify it via the\n",(0,o.jsx)(n.code,{children:"--config"})," command line parameter."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"electron-wm --config ~/my-desktop-config\n"})}),"\n",(0,o.jsxs)(n.p,{children:["If you omit ",(0,o.jsx)(n.code,{children:"--config"})," it is assumed that your configuration resides in the\ndefault ",(0,o.jsx)(n.code,{children:"electron-wm-config"})," folder that the init script creates."]}),"\n",(0,o.jsxs)(n.p,{children:["Note that ",(0,o.jsx)(n.code,{children:"--config"}),' doesn\'t have to refer to a local folder. This can be any\n"package identifier" that Node.js can ',(0,o.jsx)(n.code,{children:"require"})," at runtime, provided you have\ninstalled the package. For example, if you want the vanilla react template that\nelectron-wm provides, you could ",(0,o.jsx)(n.code,{children:"npm i -g @electron-wm/react-config"})," and then\npass ",(0,o.jsx)(n.code,{children:"--config @electron-wm/react-config"}),"."]}),"\n",(0,o.jsx)(n.h2,{id:"transparency",children:"Transparency"}),"\n",(0,o.jsxs)(n.p,{children:["If you want to have rounded frame window edges with transparency, try using an\nX11 compositor. The ",(0,o.jsx)(n.a,{href:"https://github.com/yshui/picom",children:"picom"})," compositor has been\nfound to work well."]}),"\n",(0,o.jsx)(n.p,{children:"As typical with X11 compositors, they are often ran before the WM itself:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"picom &\nexec electron-wm\n"})}),"\n",(0,o.jsx)(n.p,{children:"Picom enables several effects by default (shadows, fading) which you may want to\ndisable via picom.conf."})]})}function u(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},3274:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>c});var o=t(79);const i={},r=o.createContext(i);function c(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);